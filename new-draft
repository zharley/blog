#!/usr/bin/env ruby

# @see http://apidock.com/rails/ActiveSupport/Inflector/parameterize
def parameterize(string, separator = '-')
  # Turn unwanted chars into the separator
  string = string.gsub(/[^A-Za-z0-9\-_]+/, separator)
  unless separator.nil? || separator.empty?
    re_separator = Regexp.escape(separator)
    # No more than one of the separator in a row.
    string.gsub!(/#{re_separator}{2,}/, separator)
    # Remove leading/trailing separator.
    string.gsub!(/^#{re_separator}|#{re_separator}$/, '')
  end
  string.downcase
end

# Check that a parameter (title) has been supplied
if ARGV.empty?
  puts "Usage: #{File.basename($0)} \"Some title for a post\""
  exit 1
end

# Combine all arguments, forgiving lack of quotes around title
title = ARGV.join(" ");

# Target directory for drafts
dir = "www/_drafts"

# Default format (and file extension)
format = "markdown"

# Build draft filename within target directory
path = File.join(dir, parameterize(title) + '.' + format)

# Check that target directory exists
unless Dir.exist?(dir)
  puts "=> Missing target directory #{dir}"
  exit 1
end

# Check that the draft filename does not already exist
if File.exist?(path)
  puts "=> File already exists #{path}"
  exit 1
end

# Prepare post metadata containing title
body = <<EOF
---
layout:     post
title:      "#{title}"
categories: 
---
EOF

# Write draft file
File.write(path, body)
puts "=> New draft post started at: #{path}"
